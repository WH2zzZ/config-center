server:
  port: 8002

spring:
  task:
    # Spring 执行器配置，对应 TaskExecutionProperties 配置类。对于 Spring 异步任务，会使用该执行器。
    execution:
      thread-name-prefix: task- # 线程池的线程名的前缀。默认为 task- ，建议根据自己应用来设置
      pool: # 线程池相关
        core-size: 8 # 核心线程数，线程池创建时候初始化的线程数。默认为 8 。
        max-size: 20 # 最大线程数，线程池最大的线程数，只有在缓冲队列满了之后，才会申请超过核心线程数的线程。默认为 Integer.MAX_VALUE
        keep-alive: 60s # 允许线程的空闲时间，当超过了核心线程之外的线程，在空闲时间到达之后会被销毁。默认为 60 秒
        queue-capacity: 200 # 缓冲队列大小，用来缓冲执行任务的队列的大小。默认为 Integer.MAX_VALUE 。
        allow-core-thread-timeout: true # 是否允许核心线程超时，即开启线程池的动态增长和缩小。默认为 true 。
      shutdown:
        await-termination: true # 应用关闭时，是否等待定时任务执行完成。默认为 false ，建议设置为 true
        await-termination-period: 60 # 等待任务完成的最大时长，单位为秒。默认为 0 ，根据自己应用来设置
    execution-one:
      thread-name-prefix: task-one-
      pool:
        core-size: 8
        max-size: 20
        keep-alive: 60s
        queue-capacity: 200
        allow-core-thread-timeout: true
      shutdown:
        await-termination: true
        await-termination-period: 60
    execution-two:
      thread-name-prefix: task-two-
      pool:
        core-size: 8
        max-size: 20
        keep-alive: 60s
        queue-capacity: 200
        allow-core-thread-timeout: true
      shutdown:
        await-termination: true
        await-termination-period: 60
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/memberserver?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai
    username: root
    password: Brc@1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      poolName: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
liquibase:
  changeLog: classpath:liquibase/master.yaml
  enabled: true
  dropFirst: false

#服务注册和发现中心
eureka:
  instance:
    #将服务的IP地址而不是服务的主机名注册到eureka，因为在容器的环境中，主机名是随机生成的，可能会导致容器无法正确解析主机名位置。
    preferIpAddress: true
  client:
#    表示是否将自己注册在EurekaServer上，默认为true。
#    应用启动时，会利用指定的eureka.client.serviceUrl.defaultZone（也可以自定义Zone） 注册到对应的Eureka server中。
    register-with-eureka: true
#    表示是否从EurekaServer获取注册信息，默认为true。
#    会在本地缓存注册表，并不会每次查找服务时都调用Eureka服务。每隔30s客户端都会重新联系Eureka服务，来校验注册表是否有变化，这样在做服务之间的调用时，就不需要走eureka
    fetch-registry: true
#    每隔30s核对一份本地注册表
    registry-fetch-interval-second: 30

    service-url:
      #设置Eureka的地址列表，多个已逗号隔开
      defaultZone: http://127.0.0.1:8761/eureka


# springboot 2.1.6 引入actuator需要声明导出的接口，否则不会像早期版本那样自动映射出去
management:
  endpoints:
    web:
      exposure:
        include: "*"