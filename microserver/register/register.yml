server:
  port: 8761

#服务注册和发现中心
eureka:
  client:
    #表示是否将自己注册在EurekaServer上，默认为true。由于当前应用就是EurekaServer，所以置为false，用于做分布式
    #如果zuul和eureka在同一个服务下，需要配置为true，以保证两个可以结合使用
    register-with-eureka: false
    #表示是否从EurekaServer获取注册信息，默认为true。单节点不需要同步其他的EurekaServer节点的数据
    fetch-registry: false
    #设置Eureka的地址
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

#自定义路由规则
zuul:
  #排除zuul基于Eureka服务ID路由的自动映射，如果要排除所有的服务，可以将属性设置为"*"
#  ignored-services: 'memberserver'
  # 可以为服务做自定义路由，通过prefix表示在路由规则中前缀必须带上api
  # ignored-services: '*'
  # prefix: /api
  routes:
#    服务ID：路由规则,下面这种不配置也会默认加载路由规则，也可以通过下面这种去自定义，自定义后默认的就失效了
    memberserver: /memberserver/**
    #对于外部服务的路由映射，当访问有outerserver就会映射到http://outerserver:8888
#    outerserver:
#      path: /outerserver/**
#      url: http://outerserver:8888

#自定义hystrix超时机制
hysteria:
  command:
    # 如果是指定服务超时策略可以通过将default -> 服务ID 来实现，例如 default -> memberserver
    default:
      execution:
        timeout:
          enabled: false
        isolation:
          thread:
            # 设置10s超时
            timeoutInMilliseconds: 20000
    # todo ：监测是否可以别的服务调用时是10s，member服务调用时是20s
    # 自定义服务级别的hystrix策略
#    memberserver:
#      execution:
#        isolation:
#          thread:
#            # 设置90s超时
#            timeoutInMilliseconds: 5000
# 对于超过5s的配置，必须同时设置hystrix和ribbon，建议hystrix的时间大于ribbon，如果不配置ribbon的重试次数，默认会重试一次
# ribbon参数详解：
#     根据上面的参数计算重试的次数：
#     MaxAutoRetries + MaxAutoRetriesNextServer + (MaxAutoRetries * MaxAutoRetriesNextServer)  MaxAutoRetriesNextServer：本身会调用一次
#     即重试3次 则一共产生4次调用
# hystrix超时时间的计算：
#         重试次数，1为首次       重试的实例数量，1为第一个调用的实例        时间
#     (1 + MaxAutoRetries) * (1 + MaxAutoRetriesNextServer) * (ReadTimeout + connectTimeout) = （1 + 2） * （1 + 1）* 15 = 90s
# 注意：
#     默认情况下,GET方式请求无论是连接异常还是读取异常,都会进行重试
#     非GET方式请求,只有连接异常时,才会进行重试
ribbon:
  # 指的是建立连接后从服务器读取到可用资源所用的时间。
  ReadTimeout: 10000
  # 指的是建立连接所用的时间，适用于网络状况正常的情况下，两端连接所用的时间。
  ConnectTimeout: 5000
  #同一台实例最大重试次数,不包括首次调用
  MaxAutoRetries: 2
  #重试负载均衡其他的实例最大重试次数,不包括首次调用
  MaxAutoRetriesNextServer: 1
  #是否所有操作都重试
  #当OkToRetryOnAllOperations设置为false时，只会对get请求进行重试。
  #如果设置为true，便会对所有的请求进行重试，如果是put或post等写操作，如果服务器接口没做幂等性，会产生不好的结果，所以OkToRetryOnAllOperations慎用。
  OkToRetryOnAllOperations: false
  eureka:
    enabled: true

# springboot 2.1.6 引入actuator需要声明导出的接口，否则不会像早期版本那样自动映射出去
management:
  endpoints:
    web:
      exposure:
        include: "*"